# MagaDrive Project - T8-T10 Integration
# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
DOCKER_COMPOSE = docker-compose
FLUTTER = flutter
PYTHON = python3
MAKE = make

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
FRONTEND_DIR = Frontend
BACKEND_DIR = Microservices
DOCK_DIR = Dock
DOCS_DIR = docs

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
BLUE = \033[0;34m
NC = \033[0m # No Color

.PHONY: help all clean build run test stop logs status

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(BLUE)=== MagaDrive T8-T10 Integration ===$(NC)"
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}'

all: build ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç

# =============================================================================
# Backend (Microservices)
# =============================================================================

backend-build: ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@cd $(BACKEND_DIR)/api-gateway_py && pip install -r requirements.txt
	@cd $(BACKEND_DIR)/ride_service_py && pip install -r requirements.txt
	@cd $(BACKEND_DIR)/geo_service_py && pip install -r requirements.txt
	@cd $(BACKEND_DIR)/pricing_core_cpp && $(MAKE) build
	@echo "$(GREEN)‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã —Å–æ–±—Ä–∞–Ω—ã$(NC)"

backend-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@cd $(BACKEND_DIR)/api-gateway_py && $(PYTHON) main.py &
	@cd $(BACKEND_DIR)/ride_service_py && $(PYTHON) main.py &
	@cd $(BACKEND_DIR)/geo_service_py && $(PYTHON) main.py &
	@cd $(BACKEND_DIR)/pricing_core_cpp && ./pricing_service &
	@echo "$(GREEN)‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"
	@echo "$(YELLOW)‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'make stop' –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏$(NC)"

# =============================================================================
# Docker Backend
# =============================================================================

docker-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ Docker
	@echo "$(BLUE)üê≥ –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) up -d
	@echo "$(GREEN)‚úÖ Docker —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

docker-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ Docker —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) down
	@echo "$(GREEN)‚úÖ Docker —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

docker-build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	@echo "$(BLUE)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) build --no-cache
	@echo "$(GREEN)‚úÖ Docker –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker —Å–µ—Ä–≤–∏—Å–æ–≤
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) logs -f

docker-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Docker —Å–µ—Ä–≤–∏—Å–æ–≤
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) ps

# =============================================================================
# Frontend (Flutter)
# =============================================================================

frontend-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Flutter –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(BLUE)üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Flutter –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) pub get
	@cd $(FRONTEND_DIR) && $(MAKE) generate-style
	@echo "$(GREEN)‚úÖ Flutter –ø—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω$(NC)"

frontend-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "$(BLUE)üì± –ó–∞–ø—É—Å–∫ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) run

frontend-build: ## –°–æ–±—Ä–∞—Ç—å Flutter APK
	@echo "$(BLUE)üì± –°–±–æ—Ä–∫–∞ Flutter APK...$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) build apk --debug
	@echo "$(GREEN)‚úÖ APK —Å–æ–±—Ä–∞–Ω: $(FRONTEND_DIR)/build/app/outputs/flutter-apk/app-debug.apk$(NC)"

frontend-clean: ## –û—á–∏—Å—Ç–∏—Ç—å Flutter build
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞ Flutter build...$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) clean
	@echo "$(GREEN)‚úÖ Flutter build –æ—á–∏—â–µ–Ω$(NC)"

# =============================================================================
# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
# =============================================================================

build: backend-build frontend-setup ## –°–æ–±—Ä–∞—Ç—å –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç
	@echo "$(GREEN)üéâ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω!$(NC)"

run: docker-up frontend-run ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç
	@echo "$(GREEN)üéâ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω!$(NC)"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) test
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã$(NC)"

# =============================================================================
# –£—Ç–∏–ª–∏—Ç—ã
# =============================================================================

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@cd $(FRONTEND_DIR) && $(MAKE) clean
	@cd $(BACKEND_DIR)/pricing_core_cpp && $(MAKE) clean
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) down -v
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç –æ—á–∏—â–µ–Ω$(NC)"

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@pkill -f "python.*main.py" || true
	@pkill -f "pricing_service" || true
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) down
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) logs --tail=50

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@echo "$(YELLOW)Backend (Docker):$(NC)"
	@cd $(DOCK_DIR) && $(DOCKER_COMPOSE) ps
	@echo "$(YELLOW)Frontend:$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) doctor

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@curl -s http://localhost:8080/healthz | jq . || echo "$(RED)‚ùå Gateway –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@curl -s http://localhost:8001/healthz | jq . || echo "$(RED)‚ùå Ride Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@curl -s http://localhost:8002/healthz | jq . || echo "$(RED)‚ùå Geo Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@curl -s http://localhost:8003/healthz | jq . || echo "$(RED)‚ùå Pricing Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

# =============================================================================
# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
# =============================================================================

dev-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "$(YELLOW)1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@cd $(BACKEND_DIR)/api-gateway_py && pip install -r requirements.txt
	@cd $(BACKEND_DIR)/ride_service_py && pip install -r requirements.txt
	@cd $(BACKEND_DIR)/geo_service_py && pip install -r requirements.txt
	@echo "$(YELLOW)2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Flutter –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) pub get
	@echo "$(YELLOW)3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∏–ª—è –∫–∞—Ä—Ç—ã...$(NC)"
	@cd $(FRONTEND_DIR) && $(MAKE) generate-style
	@echo "$(YELLOW)4. –°–±–æ—Ä–∫–∞ C++ —Å–µ—Ä–≤–∏—Å–∞...$(NC)"
	@cd $(BACKEND_DIR)/pricing_core_cpp && $(MAKE) build
	@echo "$(GREEN)‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ$(NC)"

dev-run: ## –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ Backend —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@$(MAKE) backend-run
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ Frontend...$(NC)"
	@$(MAKE) frontend-run

# =============================================================================
# Production
# =============================================================================

prod-build: ## –°–±–æ—Ä–∫–∞ –¥–ª—è production
	@echo "$(BLUE)üè≠ –°–±–æ—Ä–∫–∞ –¥–ª—è production...$(NC)"
	@cd $(FRONTEND_DIR) && $(FLUTTER) build apk --release
	@cd $(BACKEND_DIR)/pricing_core_cpp && $(MAKE) cmake-build
	@echo "$(GREEN)‚úÖ Production —Å–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞$(NC)"

prod-deploy: ## –î–µ–ø–ª–æ–π –≤ production
	@echo "$(BLUE)üöÄ –î–µ–ø–ª–æ–π –≤ production...$(NC)"
	@echo "$(RED)‚ö†Ô∏è  –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ$(NC)"

# =============================================================================
# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
# =============================================================================

docs: ## –°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(BLUE)üìö –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...$(NC)"
	@echo "$(GREEN)‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ $(DOCS_DIR)/$(NC)"

# =============================================================================
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# =============================================================================

info: ## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "$(BLUE)=== MagaDrive T8-T10 ===$(NC)"
	@echo "$(GREEN)–í–µ—Ä—Å–∏—è:$(NC) T8-T10 Integration"
	@echo "$(GREEN)–°—Ç–∞—Ç—É—Å:$(NC) Development"
	@echo "$(GREEN)–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:$(NC) Microservices + Flutter"
	@echo "$(GREEN)Backend:$(NC) Python + C++"
	@echo "$(GREEN)Frontend:$(NC) Flutter + MapLibre GL"
	@echo "$(GREEN)–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è:$(NC) REST + WebSocket"
	@echo ""
	@echo "$(YELLOW)–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:$(NC)"
	@echo "  make dev-setup    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
	@echo "  make dev-run      # –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make docker-up    # –ó–∞–ø—É—Å–∫ Docker"
	@echo "  make frontend-run # –ó–∞–ø—É—Å–∫ Flutter"
